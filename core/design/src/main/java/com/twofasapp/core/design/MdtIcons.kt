/*
 * SPDX-License-Identifier: BUSL-1.1
 *
 * Copyright Â© 2025 Two Factor Authentication Service, Inc.
 * Licensed under the Business Source License 1.1
 * See LICENSE file for full terms
 */

package com.twofasapp.core.design

import androidx.compose.runtime.Composable
import androidx.compose.runtime.Immutable
import androidx.compose.runtime.Stable
import androidx.compose.ui.res.painterResource

@Immutable
@Stable
object MdtIcons {
    val Placeholder @Composable get() = painterResource(R.drawable.ic_android)
    val ArrowBack @Composable get() = painterResource(R.drawable.ic_arrow_back)
    val Add @Composable get() = painterResource(R.drawable.ic_add)
    val Edit @Composable get() = painterResource(R.drawable.ic_edit)
    val Close @Composable get() = painterResource(R.drawable.ic_close)
    val Settings @Composable get() = painterResource(R.drawable.ic_settings)
    val Search @Composable get() = painterResource(R.drawable.ic_search)
    val Visibility @Composable get() = painterResource(R.drawable.ic_visibility)
    val VisibilityOff @Composable get() = painterResource(R.drawable.ic_visibility_off)
    val More @Composable get() = painterResource(R.drawable.ic_more)
    val Copy @Composable get() = painterResource(R.drawable.ic_copy)
    val Key @Composable get() = painterResource(R.drawable.ic_key)
    val Encrypted @Composable get() = painterResource(R.drawable.ic_encrypted)
    val Delete @Composable get() = painterResource(R.drawable.ic_delete)
    val DeleteForever @Composable get() = painterResource(R.drawable.ic_delete_forever)
    val Restore @Composable get() = painterResource(R.drawable.ic_restore)
    val Open @Composable get() = painterResource(R.drawable.ic_open)
    val Brush @Composable get() = painterResource(R.drawable.ic_brush)
    val Paint @Composable get() = painterResource(R.drawable.ic_paint)
    val Palette @Composable get() = painterResource(R.drawable.ic_palette)
    val User @Composable get() = painterResource(R.drawable.ic_user)
    val Refresh @Composable get() = painterResource(R.drawable.ic_refresh)
    val Touch @Composable get() = painterResource(R.drawable.ic_touch)
    val Smartphone @Composable get() = painterResource(R.drawable.ic_smartphone)
    val ChevronLeft @Composable get() = painterResource(R.drawable.ic_chevron_left)
    val ChevronRight @Composable get() = painterResource(R.drawable.ic_chevron_right)
    val ChevronUp @Composable get() = painterResource(R.drawable.ic_chevron_up)
    val ChevronDown @Composable get() = painterResource(R.drawable.ic_chevron_down)
    val Check @Composable get() = painterResource(R.drawable.ic_check)
    val CircleCheck @Composable get() = painterResource(R.drawable.ic_circle_check)
    val CircleCheckFilled @Composable get() = painterResource(R.drawable.ic_circle_check_filled)
    val CircleCheckThinFilled @Composable get() = painterResource(R.drawable.ic_circle_check_thin_filled)
    val CircleUncheck @Composable get() = painterResource(R.drawable.ic_circle_uncheck)
    val Help @Composable get() = painterResource(R.drawable.ic_help)
    val Info @Composable get() = painterResource(R.drawable.ic_info)
    val Warning @Composable get() = painterResource(R.drawable.ic_warning)
    val WarningShield @Composable get() = painterResource(R.drawable.ic_warning_shield)
    val Error @Composable get() = painterResource(R.drawable.ic_error)
    val Exclamation @Composable get() = painterResource(R.drawable.ic_exclamation)
    val Save @Composable get() = painterResource(R.drawable.ic_save)
    val Share @Composable get() = painterResource(R.drawable.ic_share)
    val Autofill @Composable get() = painterResource(R.drawable.ic_autofill)
    val AutofillInput @Composable get() = painterResource(R.drawable.ic_autofill_input)
    val AutofillInline @Composable get() = painterResource(R.drawable.ic_autofill_inline)
    val CloudSync @Composable get() = painterResource(R.drawable.ic_cloud_sync)
    val Cloud @Composable get() = painterResource(R.drawable.ic_cloud)
    val Backup @Composable get() = painterResource(R.drawable.ic_backup)
    val ImportExport @Composable get() = painterResource(R.drawable.ic_import_export)
    val Download @Composable get() = painterResource(R.drawable.ic_download)
    val Upload @Composable get() = painterResource(R.drawable.ic_upload)
    val CheckAll @Composable get() = painterResource(R.drawable.ic_check_all)
    val Import @Composable get() = painterResource(R.drawable.ic_import)
    val Export @Composable get() = painterResource(R.drawable.ic_export)
    val Document @Composable get() = painterResource(R.drawable.ic_document)
    val PasswordGenerator @Composable get() = painterResource(R.drawable.ic_password_generator)
    val Filter @Composable get() = painterResource(R.drawable.ic_filter)
    val Sort @Composable get() = painterResource(R.drawable.ic_sort)
    val LockTime @Composable get() = painterResource(R.drawable.ic_lock_time)
    val LockAttempts @Composable get() = painterResource(R.drawable.ic_lock_attempts)
    val LockKeyboard @Composable get() = painterResource(R.drawable.ic_keyboard_lock)
    val Fingerprint @Composable get() = painterResource(R.drawable.ic_fingerprint)
    val Screenshot @Composable get() = painterResource(R.drawable.ic_screenshot)
    val DecryptionKit @Composable get() = painterResource(R.drawable.ic_decryption_kit)
    val Password @Composable get() = painterResource(R.drawable.ic_password)
    val Lan @Composable get() = painterResource(R.drawable.ic_lan)
    val Logout @Composable get() = painterResource(R.drawable.ic_logout)
    val File @Composable get() = painterResource(R.drawable.ic_file)
    val Folder @Composable get() = painterResource(R.drawable.ic_folder)
    val FolderOpen @Composable get() = painterResource(R.drawable.ic_folder_open)
    val QrScanner @Composable get() = painterResource(R.drawable.ic_qr_scanner)
    val Keyboard @Composable get() = painterResource(R.drawable.ic_keyboard)
    val HardDrive @Composable get() = painterResource(R.drawable.ic_hard_drive)
    val Lock @Composable get() = painterResource(R.drawable.ic_lock)
    val Desktop @Composable get() = painterResource(R.drawable.ic_desktop)
    val Notifications @Composable get() = painterResource(R.drawable.ic_notifications)
    val SyncAlt @Composable get() = painterResource(R.drawable.ic_sync_alt)
    val Support @Composable get() = painterResource(R.drawable.ic_support)
    val Forum @Composable get() = painterResource(R.drawable.ic_forum)
    val Star @Composable get() = painterResource(R.drawable.ic_star)
    val StarShine @Composable get() = painterResource(R.drawable.ic_star_shine)
    val FileSave @Composable get() = painterResource(R.drawable.ic_file_save)
    val Print @Composable get() = painterResource(R.drawable.ic_print)
    val Tier1 @Composable get() = painterResource(R.drawable.ic_tier1)
    val Tier2 @Composable get() = painterResource(R.drawable.ic_tier2)
    val Tier3 @Composable get() = painterResource(R.drawable.ic_tier3)
    val Downloading @Composable get() = painterResource(R.drawable.ic_downloading)
    val AddCircle @Composable get() = painterResource(R.drawable.ic_add_circle)
    val RotateLeft @Composable get() = painterResource(R.drawable.ic_rotate_left)
    val Tag @Composable get() = painterResource(R.drawable.ic_tag)
    val Hashtag @Composable get() = painterResource(R.drawable.ic_hashtag)
}